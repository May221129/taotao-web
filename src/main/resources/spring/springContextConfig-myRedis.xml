<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:redis="http://www.springframework.org/schema/redis"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd                           http://www.springframework.org/schema/redis http://www.springframework.org/schema/redis/spring-redis-1.0.xsd">

	<!-- spring和redis的整合文件： -->
	<!-- 这里用的是Spring Data Redis的写好的工具 -->
	
	<!-- 连接池配置 -->
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<!-- 最大连接数, 默认8个： -->
		<property name="maxTotal" value="${redis.maxTotal}" />
		<!-- 最大空闲连接数, 默认8个： -->
		<property name="maxIdle" value="${redis.maxIdle}" />
		<!-- 在获取连接的时候检查有效性, 默认false： -->
		<property name="testOnBorrow" value="${redis.testOnBorrow}" />
	</bean>
	<!--注意使用订阅发布时,此bean必须命名为redisConnectionFactory,否则需要在listener中指明连接工厂 -->
	<bean id="redisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
		p:host-name="${redis.node1.host}" p:port="${redis.node1.port}" p:pool-config-ref="poolConfig" />

	<bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
		<property name="connectionFactory" ref="redisConnectionFactory" />
	</bean>
	
	<!-- 这是使用第二种指定通道名称的方式时所需用到的类： -->
	<!-- 
	<bean id="stringRedisSerializer"
		class="org.springframework.data.redis.serializer.StringRedisSerializer" />
	 -->
	 
	<!--此处注册监听器,需要指定通道名称(topic)(可以使用正则表达式*_等等),
		第一种为实现MessageListener接口的监听器的注册,
		第二种为自己定义的类的注册需要制定处理方法名称(不制定的默认方法为handleMessage,如果你的方法是这个名称可以不指定)与序列化的方式,推荐使用第一种方式 -->
	<redis:listener-container>
		<!-- 第一种： -->
		<redis:listener ref="itemSubscribeByRedisMessageListener" topic="item-detail" />
		<!-- 我的广告在C端没有做缓存，所以下面这个只是假装我有做广告的缓存： -->
		<!-- <redis:listener ref="contentRedisMessageListener" topic="content" /> -->
		<!-- 第二种： -->
		<!-- 
		<redis:listener ref="itemSubscribeByRedisMessageListener" topic="talk"
			method="getMessage" serializer="stringRedisSerializer"></redis:listener>
		-->
	</redis:listener-container>

</beans>
